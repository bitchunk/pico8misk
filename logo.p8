pico-8 cartridge // http://www.pico-8.com
version 35
__lua__
--mu-scalelab
--@shiftalow
--knutil_0.4
--@shiftalow
function tonorm(s)
if tonum(s) then return tonum(s)
elseif s=='true' then return true
elseif s=='false' then return false
elseif s=='nil' then return nil
end
return s
end

function tohex(p,n)
p=sub(tostr(tonum(p),1),3,6)
while sub(p,1,1)=='0' do
p=sub(p,2)
end
p=join(tbfill(0,(n or 0)-#p),'')..p
return p
end

function ttoh(h,l,b)
return bor(shl(tonum(h),b),tonum(l))
end
function htot(v)
return {lshr(band(v,0xff00),8),band(v,0xff)}
end

function replace(s,f,r)
local a,i='',1
while i<=#s do
if sub(s,i,i+#f-1)~=f then
a..=sub(s,i,i)
i+=1
else
a..=r or ''
i+=#f
end
end
return a
end

function toc(v,p)
return flr(v/(p or 8))
end

function join(s,d)
local a=''
for i,v in pairs(s) do
a=a..v..d
end
return sub(a,1,-1-#d)
end

_split,split=split,function(str,d,dd)
if dd then
local a,str={},split(str,dd)
while str[1] do
add(a,split(deli(str,1),d))
end
return a
end
return _split(str,d or ' ',false)
end

_bc={}
function htd(b,n)
a={}
tmap(split(b,n or 2),function(v)
add(a,tonum('0x'..v))
end)
return a
end

function slice(r,f,t)
local v={}
for i=f,t or #r do
add(v,r[i])
end
return v
end

function cat(f,...)
foreach({...},function(s)
for k,v in pairs(s) do
if tonum(k) then
add(f,v)
else
f[k]=v
end
end
end)
return f
end

function comb(k,p)
local a={}
for i=1,#k do
a[k[i]]=p[i]
end
return a
end

function tbfill(v,n,r)
local t={}
if r and r>0 then
n,r=r,n
end
for i=0,n-1 do
t[i]=r and tbfill(v,r) or v
end
return t
end

function rceach(p,f)
p=rfmt(p)
for y=p.y,p.ey do
for x=p.x,p.ex do
f(x,y,p)
end
end
end

function outline(t,a)
local i,j,k,l=unpack(split(a))
rceach('-1 -1 3 3',function(x,y)
?t,x+i,y+j,l
end)
?t,i,j,k
end

function tmap(t,f)
for i,v in pairs(t) do
t[i]=f(v,i) or t[i]
end
return t
end

function mkpal(f,t)
return comb(htd(f,1),htd(t,1))
end
function ecmkpal(v)
return tmap(v,function(v,i)
i,v=unpack(v)
return tmap(v,function(v)
return mkpal(_ENV[i],v)
end)
end)
end
function ecpalt(p)
for i,v in pairs(p) do
if v==0 then
palt(i,true)
end
end
end

function ttable(p)
return type(p)=='table' and p
end

function inrng(c,l,h)
return mid(c,l,h)==c
end
function amid(c,a)
return mid(c,a,-a)
end

function bmch(b,m,l)
b=band(b,m)
return l and b~=0 or b==m
end

function htbl(ht,c)
local t,k,rt={}
ht,c=split(ht,'') or ht,c or 1
while ht[c] do
local p=ht[c]
c+=1
if p=='{' or p=='=' then
rt,c=htbl(ht,c)
if rt then
if p=='=' then
t[tonorm(k)]=rt[1]
elseif k then
t[tonorm(k)]=rt
else
add(t,rt)
end
end
k=nil
elseif p=='}' or p==';' then
add(t,tonorm(k))
k=nil
return t,c
elseif p==' ' then
add(t,tonorm(k))
k=nil
elseif p~="\n" then
k=(k or '')..p
end
end
add(t,tonorm(k))
return t
end

mkrs,hovk,_mnb=htbl'x y w h ex ey r p'
,htbl'{x y}{x ey}{ex y}{ex ey}'
,htbl'con hov ud rs rf cs cf os of cam'
function rfmt(p)
local x,y,w,h=unpack(ttable(p) or _split(p,' ',true))
return comb(mkrs,{x,y,w,h,x+w-1,y+h-1,w/2,p})
end

function exrect(p)
local o=rfmt(p)
return cat(o,comb(_mnb,{
function(x,y)
if y then
return inrng(x,o.x,o.ex) and inrng(y,o.y,o.ey)
else
return o.con(x.x,x.y) and o.con(x.ex,x.ey)
end
end
,function(r,p)
local h
for i,v in pairs(hovk) do
h=h or o.con(r[v[1]],r[v[2]])
end
return h or p==nil and r.hov(o,true)
end
,function(p,y,w,h)
return cat(
o,rfmt((tonum(p) or not p) and {p or o.x,y or o.y,w or o.w,h or o.h} or p
))
end
,function(col,f)
local c=o.cam
f=(f or rect)(o.x-c.x,o.y-c.y,o.ex-c.x,o.ey-c.y,col)
return o
end
,function(col)
return o.rs(col,rectfill)
end
,function(col,f)
(f or circ)(o.x+o.r-o.cam.x,o.y+o.r-o.cam.y,o.w/2,col)
return o
end
,function(col)
return o.cs(col,circfill)
end
,function(col)
return o.rs(col,oval)
end
,function(col)
return o.rs(col,ovalfill)
end
,{x=0,y=0}
}))
end

-->8
--dmp
_dmpl={}
function dmp(v,x)
local tstr=comb(split[[
table number string boolean function nil
]],split[[
{ # $ % * !;
]])
local p,s=true,''
if x==nil then x=0 color(6) cls()
else
s=join(tbfill(' ',x),'')
end
v=ttable(v) or {v}
for i,str in pairs(v) do
	if ttable(str) then
	 add(_dmpl,s..i..tstr[type(str)])
		dmp(str,x+1)
	 add(_dmpl,s..'}')
 p=true
	else
		if p then
		add(_dmpl,s)
		end
 _dmpl[#_dmpl]=_dmpl[#_dmpl]..tstr[type(str)]..(tonum(i) and '' or i)..':'..tostr(str)..' '
	p=false
	end
end
if x==0 then
tmap(_dmpl,function(v)
?v 
end)
stop()
end
end

--dbg
_dbgv={}
function dbg(...)
if ... then
add(_dbgv,{...})
else
tmap(_dbgv,function(t,y)
local p=''
tmap(ttable(t) or {t},function(v,x)
p..=tostr(v)..' '
end)
?p,0,122+(y-#_dbgv)*6,7
end)
_dbgv={}
end
end

-->8

-->8
function _init()
cls()
cnt=0
m=15
spid=44
--(44%8)*4+(44/16)*64*8
--tmap({peek4((spid%16)*4+toc(spid,16)*64*8,4)},function(v)
--?tohex(v)
--end)
--stop()
if not ttable(logop) then
cat(_ENV,ecmkpal(epal))
end
--dmp(logop[1][6])

spp={peek((spid%16)*4+toc(spid,16)*64*8+1,15)}
--tmap(spp,function(v)
--?v
--end)
--stop()
pal(spp,1)
while btnp()==0 do
--poke4(0x5f10,peek((spid%16)*4+toc(spid,16)*64*8,16))
--rceach('32 32 64 64',function(x,y)
--pset(x,y,toc(x-32,4)%16)
--end)
--cnt+=1
flip()
end
cnt=0
end
function _update60()
--eachpal('1267c',htbl'1 133 6 7 12')
--local p=htbl[[
--{0 0 0 0 0}
--{0 0 0 1 0}
--{0 0 1 5 1}
--{129 0 133 6 140}
--{1 0 5 135 13}
--{7 7 7 7 7}
--{3 11 139 7 135}
--{1 129 6 7 12}
--]]

--p=htbl[[
--{0 0 0 0 0}
--{0 0 0 1 0}
--{0 0 1 5 1}
--{4 0 8 6 14}
--{1 0 5 9 13}
--{7 7 7 7 7}
--{3 11 10 7 9}
--{1 4 6 7 12}
--]]
--[[
00 01 02 03 81 05 06 07
85 87 91 0b 0c 0d 92 0f
]]--
--dmp(logop)
--dbg(#logop[1])
--dmp(logop[1])
--pal(logop[1],nil,1)

--pal(spp)

--tmap(htd('1267c',1),function(v,i)
--if m==15 then
--poke(0x5f10+v,p[mid(1,toc(cnt,2)+1,8)][i])
--else
--poke(0x5f10+v,p[mid(8,toc(31-cnt,2)+1,1)][i])
--end
--end)
--pal(0,4,1)
--pal(spp,spp,1)
--flip()
--flip()
--flip()
--flip()
if btnp()~=0 then
if m==31 then
_init()
else
m=31
end
end
dbg()
end

function _draw()
cls()
cnt=min(cnt+1,m)
if cnt==14 then
music(0)
end
if m==15 then
pal(logop[mid(2,toc(cnt,2)+2,9)])
else
pal(logop[mid(2,toc(31-cnt,2)+2,9)])
end
spr(2,20-cnt*2+32,56,11,2)
--flip()
--flip()
--flip()
--flip()
--flip()
end
-->8
cat(_ENV,htbl[[
logop=1267c;
epal{
logop{logop {
1267c 
00000$ 
00010$ 
00151$ 
4086e 
1059d 
77777$ 
3ba79$ 
1467c 
}
}
}
]])
--{0 0 0 0 0}
--{0 0 0 1 0}
--{0 0 1 5 1}
--{4 0 8 6 14}
--{1 0 5 9 13}
--{7 7 7 7 7}
--{3 11 10 7 9}
--{1 4 6 7 12}
__gfx__
00000000000000000007777777777777777777777777777777777777777777777777777777777777777777777777777777777000000000000000000000000000
00000000000000000007111111111111111111111111111111111111111111111111111111111111111111111111111111117000000000000000000000000000
00700700000000000007111111111111111111111111111111111111111111111111111111111111111111111111111111117000000000000000000000000000
00077000000000000007111116661111116661111666111111111111166611111111111111111111111166611111111111117000000000000000000000000000
00077000000000007777111116661111116661111666111111111111166611111111111111111111111166616661111111117000000000000000000000000000
00700700000000007111111116661111116661166666661166666661166611111166616661166666661166616661111177777000000000000000000000000000
00000000000000007111111116661111111111166666661166666661166666661166616661166666661166666661111170000000000000000000000000000000
00000000000000007111111116666666116661111666111166611111166666661166616661166616661166666611111170000000000000000000000000000000
000000000000000071ccccccc1111111cc111cccc111cccc111cccccc1111111cc111c111cc111c111cc1111111cccc170000000000000000000000000000000
0000000000000000712222222ccc77cc22ccc2222ccc2222ccc222222ccc2ccc22ccc2ccc22ccc2ccc22ccc2ccc2222170000000000000000000000000000000
0000000000000000711112222ccc77cc22ccc2222ccc2222ccc222222ccc2ccc22ccc2ccc22ccc2ccc22ccc2ccc2222177777000000000000000000000000000
0000000000000000777712222ccccccc22ccc2222ccccc22ccccccc22ccc2ccc22ccccccc22ccc2ccc22ccc2ccc2222111117000000000000000000000000000
0000000000000000000712222ccccccc22ccc2222ccccc22ccccccc22ccc2ccc22ccccccc22ccc2ccc22ccc2ccc2222222217000000000000000000000000000
00000000000000000007122222222222222222222222222222222222222222222222222222222222222222222222222222217000000000000000000000000000
00000000000000000007111111111111111111111111111111111111111111111111111111111111111111111111111111117000000000000000000000000000
00000000000000000007777777777777777777777777777777777777777777777777777777777777777777777777777777777000000000000000000000000000
00000000777777777777000077777777777777777777777777777777777777777777777777777777777777777777777700102030185060705878b8b0c0d0c8f0
00000000111111111111000011111111111111111111111111111111111111111111111111111111111111711111111100000000000000000000000000000000
00000000111111111111000011111111111111111111111111111111111111111111111111111111111111711111111100000000000000000000000000000000
00000000111166611111000011166611111166611116661111111111111166611111111111111111111111711666111100000000000000000000000000000000
00000000111166611111777711166611111166611116661111111111111166611111111111111111111111711666166100000000000000000000000000000000
00000000111166611111771111166611111166611666666611166666611166611111166616611166666611111666166100000000000000000000000000000000
00000000111166611111771111166611111111111666666611166666611166611111166616611166666611111666666100000000000000000000000000000000
00000000111166666611771111166666611166611116661111166611111166666611166616611166616611111666661100000000000000000000000000000000
00000000dddd111111dd77ddddd111111ddd111dddd111ddddd111dddddd111111ddd111d11ddd111111ddddd111111d00000000000000000000000000000000
000000000000cc77cc007700000cc77cc000ccc0000ccc00000ccc000000ccc0cc000ccc0cc000ccc0cc00000ccc0cc000000000000000000000000000000000
000000000000cc77cc007700000cc77cc000ccc0000ccc00000ccc000000ccc0cc000ccc0cc000ccc0cc00000ccc0cc000000000000000000000000000000000
000000000000cccccc007777000cccccc000ccc0000ccccc000cccccc000ccc0cc000ccc0cc000ccc0cc00700ccc0cc000000000000000000000000000000000
000000000000cccccc000000000cccccc000ccc0000ccccc000cccccc000ccc0cc000cccccc000ccc0cc00700ccc0cc000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000
00000000777777777777000077777777777777777777777777777777777777777777777777777777777777777777777700000000000000000000000000000000
00000000000000000000077777777770007000000000000000000000000000000000000000000000000000770000000000000000000000000000000000000000
00000000000000000000011111111110007000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000
00000000000000000000011111111110007000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000
00000000000000000000011166111110007000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000
00000000000000000000011166111117777000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000
00000000000000000000011166111117111000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000
00000000000000000000011166111117111000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000
00000000000000000000011166666117111000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000
000000000000000000000ddd11111dd7ddd000000000000000000000000000000000000000000000000000d10000000000000000000000000000000000000000
000000000000000000000000c77cc0070000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000
000000000000000000000000c77cc0070000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000
000000000000000000000000ccccc0077770000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000
000000000000000000000000ccccc0000070000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000
00000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000077777777770007000000000000000000000000000000000000000000000000000770000000000000000000000000000000000000000
__sfx__
010100001836018371183711836117321173211732117321183211832118321183211732117321173211732100000000000000000000000000000000000000000000000000000000000000000000000000000000
010100000000000000000000000018360183711837118361173211732117321173211832118321183211832117321173211732117321000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010a00002487027870298702484027840298402482027820298200080000800008000080000800008000080000800008000080000800008000080000800008000080000800008000080000800008000080000800
010a00001d95020950229501d92020920229201d91020910229100090000900009000090000900009000090000900009000090000900009000090000900009000090000900009000090000900009000090000000
__music__
04 08094344

